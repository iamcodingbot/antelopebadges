#include <eosio/eosio.hpp>

using namespace std;
using namespace eosio;

#cmakedefine SERIES_INTERFACE_CONTRACT_NAME "@SERIES_INTERFACE_CONTRACT_NAME@"
#cmakedefine SERIESBADGE_CONTRACT_NAME "@SERIESBADGE_CONTRACT_NAME@"

#define INTERFACE_SERIES_CREATE_NOTIFICATION SERIES_INTERFACE_CONTRACT_NAME"::ncreateserie"
#define INTERFACE_SERIES_BADGE_CREATE_NOTIFICATION SERIES_INTERFACE_CONTRACT_NAME"::ncreatenex"
#define INTERFACE_SERIES_ISSUE_LATEST_NOTIFICATION SERIES_INTERFACE_CONTRACT_NAME"::nissuelates"
#define INTERFACE_SERIES_ISSUE_ANY_NOTIFICATION SERIES_INTERFACE_CONTRACT_NAME"::nissuean"

CONTRACT seriesnotify : public contract {
  public:
    using contract::contract;

    [[eosio::on_notify(INTERFACE_SERIES_CREATE_NOTIFICATION)]] void acreateserie(name org, name series);
    ACTION createseries(name org, name series);

    [[eosio::on_notify(INTERFACE_SERIES_BADGE_CREATE_NOTIFICATION)]] void acreatenex(name org, name series, name badge, string offchain_lookup_data, string onchain_lookup_data, string memo);
    ACTION createnext(name org, name series, name badge, string offchain_lookup_data, string onchain_lookup_data, string memo);

    [[eosio::on_notify(INTERFACE_SERIES_ISSUE_LATEST_NOTIFICATION)]] void aissuelates(name org, name series, name to, uint64_t count, string memo);
    ACTION issuelatest(name org, name series, name to, uint64_t count, string memo);

    [[eosio::on_notify(INTERFACE_SERIES_ISSUE_ANY_NOTIFICATION)]] void aissuean(name org, name series, uint64_t seq_id, name to, uint64_t count, string memo);
    ACTION issueany(name org, name series, uint64_t seq_id, name to, uint64_t count, string memo);

  private:
    struct createseries_args {
      name org;
      name series;
    };

    struct createnext_args {
      name org;
      name series;
      name badge;
      string offchain_lookup_data;
      string onchain_lookup_data;
      string memo;
    };

    struct issuelatest_args {
      name org;
      name series;
      name to;
      uint64_t count;
      string memo;
    };

    struct issueany_args {
      name org;
      name series;
      uint64_t seq_id;
      name to;
      uint64_t count;
      string memo;
    };
};
